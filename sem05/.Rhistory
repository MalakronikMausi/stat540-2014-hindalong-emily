gExp = c(unlist(pDatDes[,grepl(".*at",colnames(pDatDes))])),
gene = factor(rep(grep(".*at",colnames(pDatDes),value=TRUE), each = nrow(pDatDes)))))
row.names(pDat) <- seq(1:nrow(pDat))
pDat
}
myDat <- prepareData(luckyGenes)
str(myDat)
pDatDes
str(pDatDes)
prDes <- read.table("../GSE4051_design.tsv", header = TRUE, as.is = TRUE)
pDatDes <- cbind(t(prDat[x,]),prDes)
str(pDatDes)
pDat <- with(pDatDes,data.frame(sidChar, sidNum, as.factor(devStage), as.factor(gType),
gExp = c(unlist(pDatDes[,grepl(".*at",colnames(pDatDes))])),
gene = factor(rep(grep(".*at",colnames(pDatDes),value=TRUE), each = nrow(pDatDes)))))
pDat
str(pDat)
pDat <- with(pDatDes,data.frame(sidChar, sidNum, as.factor(devStage), as.factor(gType),
gExp = c(unlist(pDatDes[,grepl(".*at",colnames(pDatDes))])),
gene = factor(rep(grep(".*at",colnames(pDatDes),value=TRUE), each = nrow(pDatDes))),stringsAsFactors=FALSE))
pDat
str(pDat)
prepareData <- function(x) {
pDatDes <- cbind(t(prDat[x,]),prDes)
pDat <- with(pDatDes,data.frame(sidChar, sidNum, as.factor(devStage,ordered=TRUE), as.factor(gType,ordered=TRUE),
gExp = c(unlist(pDatDes[,grepl(".*at",colnames(pDatDes))])),
gene = factor(rep(grep(".*at",colnames(pDatDes),value=TRUE), each = nrow(pDatDes))),stringsAsFactors=FALSE))
row.names(pDat) <- seq(1:nrow(pDat))
pDat
}
myDat <- prepareData(luckyGenes)
prepareData <- function(x) {
pDatDes <- cbind(t(prDat[x,]),prDes)
pDat <- with(pDatDes,data.frame(sidChar, sidNum, as.ordered(devStage), as.ordered(gType),
gExp = c(unlist(pDatDes[,grepl(".*at",colnames(pDatDes))])),
gene = factor(rep(grep(".*at",colnames(pDatDes),value=TRUE), each = nrow(pDatDes))),stringsAsFactors=FALSE))
row.names(pDat) <- seq(1:nrow(pDat))
pDat
}
myDat <- prepareData(luckyGenes)
str(myDat)
pDatDes
prepareData <- function(x) {
pDatDes <- cbind(t(prDat[x,]),prDes)
pDat <- with(pDatDes,data.frame(sidChar, sidNum, as.factor(devStage,levels=as.character(devStage)), as.factor(gType,levels=as.character(gType)),
gExp = c(unlist(pDatDes[,grepl(".*at",colnames(pDatDes))])),
gene = factor(rep(grep(".*at",colnames(pDatDes),value=TRUE), each = nrow(pDatDes))),stringsAsFactors=FALSE))
row.names(pDat) <- seq(1:nrow(pDat))
pDat
}
myDat <- prepareData(luckyGenes)
prepareData <- function(x) {
pDatDes <- cbind(t(prDat[x,]),prDes)
pDat <- with(pDatDes,data.frame(sidChar, sidNum, factor(devStage,levels=as.character(devStage)), factor(gType,levels=as.character(gType)),
gExp = c(unlist(pDatDes[,grepl(".*at",colnames(pDatDes))])),
gene = factor(rep(grep(".*at",colnames(pDatDes),value=TRUE), each = nrow(pDatDes))),stringsAsFactors=FALSE))
row.names(pDat) <- seq(1:nrow(pDat))
pDat
}
myDat <- prepareData(luckyGenes)
prepareData <- function(x) {
pDatDes <- cbind(t(prDat[x,]),prDes)
pDat <- with(pDatDes,data.frame(sidChar, sidNum, factor(devStage,ordered=TRUE, factor(gType,levels=as.character(unique(gType)),
gExp = c(unlist(pDatDes[,grepl(".*at",colnames(pDatDes))])),
gene = factor(rep(grep(".*at",colnames(pDatDes),value=TRUE), each = nrow(pDatDes))),stringsAsFactors=FALSE))
row.names(pDat) <- seq(1:nrow(pDat))
pDat
}
myDat <- prepareData(luckyGenes)
prepareData <- function(x) {
pDatDes <- cbind(t(prDat[x,]),prDes)
pDat <- with(pDatDes,data.frame(sidChar, sidNum, factor(devStage,ordered=TRUE, factor(gType,levels=as.character(unique(gType)),
gExp = c(unlist(pDatDes[,grepl(".*at",colnames(pDatDes))])),
gene = factor(rep(grep(".*at",colnames(pDatDes),value=TRUE), each = nrow(pDatDes))),stringsAsFactors=FALSE))
row.names(pDat) <- seq(1:nrow(pDat))
pDat
}
prepareData <- function(x) {
pDatDes <- cbind(t(prDat[x,]),prDes)
pDat <- with(pDatDes,data.frame(sidChar, sidNum, factor(devStage,ordered=TRUE), factor(gType,levels=as.character(unique(gType))),
gExp = c(unlist(pDatDes[,grepl(".*at",colnames(pDatDes))])),
gene = factor(rep(grep(".*at",colnames(pDatDes),value=TRUE), each = nrow(pDatDes))),stringsAsFactors=FALSE))
row.names(pDat) <- seq(1:nrow(pDat))
pDat
}
myDat <- prepareData(luckyGenes)
str(myDat)
prepareData <- function(x) {
pDatDes <- cbind(t(prDat[x,]),prDes)
pDat <- with(pDatDes,data.frame(sidChar, sidNum, factor(devStage,levels=as.character(unique(devStage))), factor(gType,levels=as.character(unique(gType))),
gExp = c(unlist(pDatDes[,grepl(".*at",colnames(pDatDes))])),
gene = factor(rep(grep(".*at",colnames(pDatDes),value=TRUE), each = nrow(pDatDes))),stringsAsFactors=FALSE))
row.names(pDat) <- seq(1:nrow(pDat))
pDat
}
myDat <- prepareData(luckyGenes)
str(myDat)
prepareData <- function(x) {
pDatDes <- cbind(t(prDat[x,]),prDes)
pDat <- with(pDatDes,data.frame(sidChar, sidNum,
factor(devStage,levels=as.character(unique(devStage))),
factor(gType,levels=as.character(unique(gType))),
gExp = c(unlist(pDatDes[,grepl(".*at",colnames(pDatDes))])),
gene = factor(rep(grep(".*at",colnames(pDatDes),value=TRUE), each = nrow(pDatDes))),stringsAsFactors=FALSE))
row.names(pDat) <- seq(1:nrow(pDat))
pDat
}
myDat <- prepareData(luckyGenes)
str(dat)
str(myDat)
stripplot(gExp ~ devStage | gene, jDat,
group = gType, jitter.data = TRUE,
auto.key = TRUE, type = c('p', 'a'), grid = TRUE)
stripplot(gExp ~ devStage | gene, myDat,
group = gType, jitter.data = TRUE,
auto.key = TRUE, type = c('p', 'a'), grid = TRUE)
prepareData <- function(x) {
pDatDes <- cbind(t(prDat[x,]),prDes)
pDat <- with(pDatDes,data.frame(sidChar, sidNum,
devStage = factor(devStage,levels=as.character(unique(devStage))),
gType = factor(gType,levels=as.character(unique(gType))),
gExp = c(unlist(pDatDes[,grepl(".*at",colnames(pDatDes))])),
gene = factor(rep(grep(".*at",colnames(pDatDes),value=TRUE), each = nrow(pDatDes))),stringsAsFactors=FALSE))
row.names(pDat) <- seq(1:nrow(pDat))
pDat
}
myDat <- prepareData(luckyGenes)
stripplot(gExp ~ devStage | gene, myDat,
group = gType, jitter.data = TRUE,
auto.key = TRUE, type = c('p', 'a'), grid = TRUE)
myDat <- prepareData(luckyGenes)
str(myDat)
makeStripplot(myDat)
makeStripplot <- function(data, ...) {
stripplot(gExp ~ devStage | gene, jDat,
group = gType, jitter.data = FALSE,
auto.key = TRUE, type = c('p', 'a'), grid = TRUE)
}
makeStripplot(myDat)
```
makeStripplot(myDat)
makeStripplot <- function(data, ...) {
stripplot(gExp ~ devStage | gene, data,
group = gType, jitter.data = FALSE,
auto.key = TRUE, type = c('p', 'a'), grid = TRUE)
}
makeStripplot(myDat)
makeStripplot <- function(data, ...) {
stripplot(gExp ~ devStage | gene, data,
group = gType, jitter.data = TRUE,
auto.key = TRUE, type = c('p', 'a'), grid = TRUE)
}
str(myDat)
head(myDat)
myDat
tRes <- t.test(gExp ~ gType,prepareData("146341_a_at"),subset = subset(myDat, (devStage == "P2" || devStage == "4_weeks")))
tRes <- t.test(gExp ~ gType,prepareData("1456341_a_at"),subset = subset(myDat, (devStage == "P2" || devStage == "4_weeks")))
prepareData("1456341_a_at")
tRes <- t.test(gExp ~ gType,prepareData("1456341_a_at"),subset = (devStage == "P2" || devStage == "4_weeks"))
tRes <- t.test(gExp ~ devStage,prepareData("1456341_a_at"),subset = (devStage == "P2" || devStage == "4_weeks"))
testDat <- prepareData("1456341_a_at")
tRes <- t.test(subset(testDat,devStage=="P2",c("gExp")),subset(testDat,devStage=="4_weeks",c("gExp)))
)
tRes <- t.test(x=subset(testDat,devStage=="P2",c("gExp")),y=subset(testDat,devStage=="4_weeks",c("gExp)))
testDat <- prepareData("1456341_a_at")
tRes <- t.test(x=subset(testDat,devStage=="P2",select=c("gExp")),y=subset(testDat,devStage=="4_weeks",select=c("gExp")))
tRes
makeStripplot(testDat)
testDat2 <- prepareData("1438786_a_at")
makeStripplot(testDat2)
lm(formula = gExp ~ devStage, data = testDat2, subset = gType == "wt")
mfit <- lm(formula = gExp ~ devStage, data = testDat2, subset = gType == "wt")
coef(mfit)
diff <- contMat %*% coef(mfit)
contMat <- [0,1,0,-1,0]
diff <- contMat %*% coef(mfit)
contMat <- [0,1,0,-1,0]
contMat <- c(0,1,0,-1,0)
diff <- contMat %*% coef(mfit)
diff
vcov(mfit)
contMat %*% vcov(mFit)
contMat %*% vcov(mfit)
vcov(mfit) %*% t(contMat)
contMat
estSe <- contMat %*% vcov(mfit) %*% t(contMat)
(estSe <- contMat %*% vcov(mFit) %*% t(contMat))
(estSe <- contMat %*% vcov(mfit) %*% t(contMat))
(estSe <- t(contMat) %*% vcov(mfit) %*% contMat)
estSe <- t(contMat) %*% vcov(mfit) %*% contMat
estSe
testStat <- diff/estSe
testStat
2 * pt(abs(testStat), df = df.residual(mFit), lower.tail = FALSE)
2 * pt(abs(testStat), df = df.residual(mfit), lower.tail = FALSE)
2 * pt(abs(testStat), df = df.residual(mfit), lower.tail = FALSE)
makeStripplot(oDat <- prepareData("1448690_at"))
oFitBigfit <- lm(formula = gExp ~ devStage + gType, data = oDat)
str(oFitBig)
oFitBig <- lm(formula = gExp ~ devStage + gType, data = oDat)
str(oFitBig)
summary(oFitBig)$coef
oFitBig <- lm(formula = gExp ~ devStage * gType, data = oDat)
summary(oFitBig)$coef
oFitSmall <- lm(formula = gExp ~ devStage + gType, data = oDat)
summary(oFitBig)$coef
oFitSmall <- lm(formula = gExp ~ devStage + gType, data = oDat)
summary(oFitBig)$coef
oFitSmall <- lm(formula = gExp ~ devStage + gType, data = oDat)
summary(oFitBig)$coef
summary(oFitSmall)$coef
makeStripplot(oDat <- prepareData("1448690_at"))
anova(oFitBig,oFitSmall)
makeStripplot(oDat <- prepareData("1429225_at"))
oFitBig <- lm(formula = gExp ~ devStage * gType, data = oDat)
summary(oFitBig)$coef
oFitSmall <- lm(formula = gExp ~ devStage + gType, data = oDat)
summary(oFitSmall)$coef
anova(oFitBig,oFitSmall)
anova(oFitSmall,oFitBig)
samp <- sample(1:nrow(prDat), size = 9, replace = FALSE)
luckyGenes <- rownames(prDat)[samp]
nineGeneDat <- prepareData(luckyGenes)
View(nineGeneDat)
makeStripplot(nineGenesDat)
samp <- sample(1:nrow(prDat), size = 9, replace = FALSE)
luckyGenes <- rownames(prDat)[samp]
nineGeneDat <- prepareData(luckyGenes)
makeStripplot(nineGeneDat)
oFitBig <- lm(formula = gExp ~ devStage * gType, data = nineGenesDat)
summary(oFitBig)$coef
oFitBig <- lm(formula = gExp ~ devStage * gType, data = nineGeneDat)
summary(oFitBig)$coef
nineGeneDat
oFitBig <- ddply(nineGeneDat, ~gene, mylm <- function(x) { lm(formula = gExp ~ devStage * gType, data = x) })
library(plyr)
oFitBig <- ddply(nineGeneDat, ~gene, mylm <- function(x) { lm(formula = gExp ~ devStage * gType, data = x) })
oFitBig <- ddply(nineGeneDat, ~gene, summarize, mylm <- function(x) { lm(formula = gExp ~ devStage * gType, data = x) })
mylm <- function(x) { lm(formula = gExp ~ devStage * gType, data = x) }
oFitBig <- ddply(nineGeneDat, ~gene, summarize, mylm)
oFitBig <- ddply(nineGeneDat, ~gene, summarize, 2)
View(oFitBig)
mylm(nineGenesDat[c("1452121_at"),])
mylm(nineGeneDat[c("1452121_at"),])
nineGeneDat[c("1452121_at"),]
subset(nineGeneDat,gene=="1452121_at")
mylm(subset(nineGeneDat,gene=="1452121_at"))
oFitBig <- ddply(nineGeneDat, ~gene, summarize, mylm)
oFitBig <- ddply(oDat, ~gene, summarize, mylm)
oFig
oFitBig
oFitBig <- by(nineGeneDat, gene, summarize, mylm)
oFitBig <- with(ninGeneDat,by(nineGeneDat, gene, mylm))
oFitBig <- with(nineGeneDat,by(nineGeneDat, gene, mylm))
oFitBig
oFitBig <- with(nineGeneDat,by(nineGeneDat, gene, function(x) {lm(formula = gExp ~ devStage * gType, data = x)}))
summary(oFitBig)$coef
lapply(summary(oFitBig)$coef)
oFitBig <- with(nineGeneDat,by(nineGeneDat, gene, function(x) lm(formula = gExp ~ devStage * gType, data = x)))
lapply(oFitBig, function(x) summary(oFitBig)$coef)
lapply(oFitBig, function(x) summary(x)$coef)
oFitBig <- with(nineGeneDat,by(nineGeneDat, gene, function(x) lm(formula = gExp ~ devStage * gType, data = x)))
oFitSmall <- with(nineGeneDat,by(nineGeneDat, gene, function(x) lm(formula = gExp ~ devStage * gType, data = x)))
anova(oFitSmall,oFitBig)
oFitBig
str(oFitBig)
anova(unlist(oFitSmall),unlist(oFitBig))
length(oFitBig)
lapply(oFitSmall, function(x) summary(x)$coef)
oFitBig <- with(nineGeneDat,by(nineGeneDat, gene, function(x) lm(formula = gExp ~ devStage * gType, data = x)))
oFitSmall <- with(nineGeneDat,by(nineGeneDat, gene, function(x) lm(formula = gExp ~ devStage + gType, data = x)))
lapply(oFitBig, function(x) summary(x)$coef)
lapply(oFitSmall, function(x) summary(x)$coef)
nums <- seq(1:9)
lapply(nums, function(x) anova(oFitBig[x],oFitSmall[x]))
oFitBig[1]
oFitSmall <- lm(formula = gExp ~ devStage + gType, data = oDat)
str(oFitSmall)
oFitSmall
anova(oFitSmall,oFitBig)
oFitBig <- with(nineGeneDat,by(nineGeneDat, gene, function(x) lm(formula = gExp ~ devStage * gType, data = x)))
oFitSmall <- with(nineGeneDat,by(nineGeneDat, gene, function(x) lm(formula = gExp ~ devStage + gType, data = x)))
ofFitSmall[1]
oFitSmall[1]
str(oFitSmall)
str(oFitSmall[1])
str(oFitSmall[]1]])
str(oFitSmall[[1]])
lapply(nums, function(x) anova(oFitBig[[x]],oFitSmall[[x]]))
oFitBig
lapply(nums, function(x) anova(oFitBig[[x]],oFitSmall[[x]]))
lapply(nums, function(x) anova(oFitSmall[[x]],oFitBig[[x]]))
age <- as.numeric(nineGenesDat$devStage)
age <- as.numeric(nineGeneDat$devStage)
install.packages("car")
nineGeneDat$age <- recode(nineGeneDat$devStage, "'E16'=-2; 'P2'=2; 'P6'=6; 'P10'=10; '4_weeks'=28",as.factor.result = FALSE)
library(car)
nineGeneDat$age <- recode(nineGeneDat$devStage, "'E16'=-2; 'P2'=2; 'P6'=6; 'P10'=10; '4_weeks'=28",as.factor.result = FALSE)
nineGeneDat
oFitAge <- with(nineGeneDat,by(nineGeneDat, gene, function(x) lm(formula = gExp ~ age, data = x)))
oFitAge
oFitAgeType <- with(nineGeneDat,by(nineGeneDat, gene, function(x) lm(formula = gExp ~ age * gType, data = x)))
source('~/.active-rstudio-document', echo=TRUE)
nineGeneDatFilt <- nineGeneDat[nineGeneDat$devStage != "4_weeks"]
nineGeneDatFilt <- nineGeneDat[nineGeneDat$devStage != "4_weeks",]
nineGeneDatFilt
nineGeneDat$age <- recode(nineGeneDat$devStage, "'E16'=-2; 'P2'=2; 'P6'=6; 'P10'=10; '4_weeks'=28",as.factor.result = FALSE)
oFitAge <- with(nineGeneDat,by(nineGeneDat, gene, function(x) lm(formula = gExp ~ age, data = x)))
oFitAgeQuad <- with(nineGeneDat,by(nineGeneDat, gene, function(x) lm(formula = gExp ~ age + I(age^2), data = x)))
lapply(oFitAge, function(x) summary(x)$coef)
lapply(oFitAgeQuad, function(x) summary(x)$coef)
nums <- seq(1:9)
lapply(nums, function(x) anova(oFitAge[[x]],oFitAgeQuad[[x]]))
colnames(oFitAge)
colnames(oFitAge[1])
oFitAge
nineGeneDatFilt <- nineGeneDat[nineGeneDat$devStage != "4_weeks",]
oFitAgeFilt <- with(nineGeneDatFilt,by(nineGeneDatFilt, gene, function(x) lm(formula = gExp ~ age, data = x)))
oFitAgeQuadFilt <- with(nineGeneDatFilt,by(nineGeneDatFilt, gene, function(x) lm(formula = gExp ~ age + I(age^2), data = x)))
lapply(oFitAgeFilt, function(x) summary(x)$coef)
lapply(oFitAgeQuadFilt, function(x) summary(x)$coef)
lapply(nums, function(x) anova(oFitAgeFilt[[x]],oFitAgeQuadFilt[[x]]))
makeStripplot <- function(data, group = gType) {
stripplot(gExp ~ devStage | gene, data,
group = group, jitter.data = TRUE,
auto.key = TRUE, type = c('p', 'a'), grid = TRUE)
}
makeStripplot(nineGeneDat,group=NULL)
makeStripplot <- function(data, group = gType) {
stripplot(gExp ~ devStage | gene, data,
group = group, jitter.data = TRUE,
auto.key = TRUE, type = c('p', 'r'), grid = TRUE)
)
makeStripplot <- function(data, group = gType) {
stripplot(gExp ~ devStage | gene, data,
group = group, jitter.data = TRUE,
auto.key = TRUE, type = c('p', 'a'), grid = TRUE)
makeStripplot <- function(data, group = gType) {
stripplot(gExp ~ devStage | gene, data,
group = group, jitter.data = TRUE,
auto.key = TRUE, type = c('p', 'a'), grid = TRUE)
}
d
)
makeStripplot <- function(data, group = gType) {
stripplot(gExp ~ devStage | gene, data,
group = group, jitter.data = TRUE,
auto.key = TRUE, type = c('p', 'a'), grid = TRUE)
}
```{r}
makeStripplot <- function(data, group = gType) {
stripplot(gExp ~ devStage | gene, data,
group = group, jitter.data = TRUE,
auto.key = TRUE, type = c('p', 'r'), grid = TRUE)
}
makeStripplot <- function(data, group = gType) {
stripplot(gExp ~ devStage | gene, data,
group = group, jitter.data = TRUE,
auto.key = TRUE, type = c('p', 'r'), grid = TRUE)
}
makeStripplot(nineGeneDat,group=NULL)
makeStripplot <- function(data, group = gType, type = c('p','a')) {
stripplot(gExp ~ devStage | gene, data,
group = group, jitter.data = TRUE,
auto.key = TRUE, type = type, grid = TRUE)
}
makeStripplot(nineGeneDat,group=NULL)
makeStipplot(nineGeneDat,NULL,c('p','r'))
makeStripplot(nineGeneDat,NULL,c('p','r'))
makeStripplot(nineGeneDat,NULL,c('p','smooth'))
help("panel.loess")
makeStripplot <- function(data, group = gType, type = c('p','a')) {
stripplot(gExp ~ devStage | gene, data,
group = group, jitter.data = TRUE,
auto.key = TRUE, type = type, grid = TRUE)
}
prepareData <- function(x) {
pDatDes <- cbind(t(prDat[x,]),prDes)
pDat <- with(pDatDes,data.frame(sidChar, sidNum,
devStage = factor(devStage,levels=as.character(unique(devStage))),
gType = factor(gType,levels=as.character(unique(gType))),
gExp = c(unlist(pDatDes[,grepl(".*at",colnames(pDatDes))])),
gene = factor(rep(grep(".*at",colnames(pDatDes),value=TRUE), each = nrow(pDatDes))),stringsAsFactors=FALSE))
row.names(pDat) <- seq(1:nrow(pDat))
pDat
}
set.seed(340)
oFitBig
str(oFitBig)
colnames(oFitBig)
colnames(nineGeneDat)
rownames(nineGeneDat)
nineGeneDat$gene
unique(nineGeneDat$gene)
coefsBig
coefsBig <- lapply(oFitBig, function(x) summary(x)$coef)
coefsSmall <- lapply(oFitSmall, function(x) summary(x)$coef)
coefsBig
unique(nineGeneDat$gene)
coefsBig$names
coefsBig
makeStripplot(nineGeneDat)
Seminar 5
========================================================
### Libraries
```{r}
library(lattice)
library(car)
```
### Reusable functions
```{r}
prepareData <- function(x) {
pDatDes <- cbind(t(prDat[x,]),prDes)
pDat <- with(pDatDes,data.frame(sidChar, sidNum,
devStage = factor(devStage,levels=as.character(unique(devStage))),
gType = factor(gType,levels=as.character(unique(gType))),
gExp = c(unlist(pDatDes[,grepl(".*at",colnames(pDatDes))])),
gene = factor(rep(grep(".*at",colnames(pDatDes),value=TRUE), each = nrow(pDatDes))),stringsAsFactors=FALSE))
row.names(pDat) <- seq(1:nrow(pDat))
pDat
}
```
```{r}
makeStripplot <- function(data, group = data$gType, type = c('p','a')) {
stripplot(gExp ~ devStage | gene, data,
group = group, jitter.data = TRUE,
auto.key = TRUE, type = type, grid = TRUE)
}
```
### Warm-up exercises
Load the data as usual
```{r}
prDes <- read.table("../GSE4051_design.tsv", header = TRUE, as.is = TRUE)
prDat <- read.table("../GSE4051_data.tsv")
```
Prepare and plot data for probeset "1456341_a_at"
```{r}
testDat <- prepareData("1456341_a_at")
str(testDat)
makeStripplot(testDat)
```
Conduct t-test for probeset "1456341_a_at" at developmental stage P2 vs. 4 weeks post-natal
```{r}
t.test(x=subset(testDat,devStage=="P2",select=c("gExp")),y=subset(testDat,devStage=="4_weeks",select=c("gExp")))
```
Linear model for one categorical covariate (probeset "1438786_a_at")
```{r}
testDat2 <- prepareData("1438786_a_at")
makeStripplot(testDat2)
mfit <- lm(formula = gExp ~ devStage, data = testDat2, subset = gType == "wt")
```
Use this model to compare P2 and P10
```{r}
contMat <- c(0,1,0,-1,0)
diff <- contMat %*% coef(mfit)
estSe <- t(contMat) %*% vcov(mfit) %*% contMat
testStat <- diff/estSe
2 * pt(abs(testStat), df = df.residual(mfit), lower.tail = FALSE)
```
Two categorical covariates: devStage and gType (probeset "1448690_at")
```{r}
makeStripplot(oDat <- prepareData("1448690_at"))
oFitBig <- lm(formula = gExp ~ devStage * gType, data = oDat)
summary(oFitBig)$coef
oFitSmall <- lm(formula = gExp ~ devStage + gType, data = oDat)
summary(oFitSmall)$coef
anova(oFitSmall,oFitBig)
```
Repeating the above for probeset 1429225_at
```{r}
makeStripplot(oDat <- prepareData("1429225_at"))
oFitBig <- lm(formula = gExp ~ devStage * gType, data = oDat)
summary(oFitBig)$coef
oFitSmall <- lm(formula = gExp ~ devStage + gType, data = oDat)
summary(oFitSmall)$coef
anova(oFitSmall,oFitBig)
set.seed(340)
samp <- sample(1:nrow(prDat), size = 9, replace = FALSE)
luckyGenes <- rownames(prDat)[samp]
nineGeneDat <- prepareData(luckyGenes)
makeStripplot(nineGeneDat)
oFitBig <- with(nineGeneDat,by(nineGeneDat, gene, function(x) lm(formula = gExp ~ devStage * gType, data = x)))
oFitSmall <- with(nineGeneDat,by(nineGeneDat, gene, function(x) lm(formula = gExp ~ devStage + gType, data = x)))
coefsBig <- lapply(oFitBig, function(x) summary(x)$coef)
coefsSmall <- lapply(oFitSmall, function(x) summary(x)$coef)
nums <- seq(1:9)
lapply(nums, function(x) anova(oFitSmall[[x]],oFitBig[[x]]))
coefsBig
oFitBig <- with(nineGeneDat,by(nineGeneDat, gene, function(x) lm(formula = gExp ~ devStage * gType, data = x)))
oFitSmall <- with(nineGeneDat,by(nineGeneDat, gene, function(x) lm(formula = gExp ~ devStage + gType, data = x)))
coefsBig <- lapply(oFitBig, function(x) summary(x)$coef)
coefsSmall <- lapply(oFitSmall, function(x) summary(x)$coef)
nums <- seq(1:9)
lapply(nums, function(x) anova(oFitSmall[[x]],oFitBig[[x]]))
oFitBig
lapply(nums, function(x) anova(oFitSmall[[x]],oFitBig[[x]]))
nineGeneDat$age <- recode(nineGeneDat$devStage, "'E16'=-2; 'P2'=2; 'P6'=6; 'P10'=10; '4_weeks'=28",as.factor.result = FALSE)
oFitAge <- with(nineGeneDat,by(nineGeneDat, gene, function(x) lm(formula = gExp ~ age, data = x)))
oFitAgeQuad <- with(nineGeneDat,by(nineGeneDat, gene, function(x) lm(formula = gExp ~ age + I(age^2), data = x)))
coefsAge <- lapply(oFitAge, function(x) summary(x)$coef)
coefsQuad <- lapply(oFitAgeQuad, function(x) summary(x)$coef)
lapply(nums, function(x) anova(oFitAge[[x]],oFitAgeQuad[[x]]))
makeStripplot(nineGeneDat,group=NULL)
oFitAge[[3]]
oFitAge[3]
nineGeneDatFilt <- nineGeneDat[nineGeneDat$devStage != "4_weeks",]
oFitAgeFilt <- with(nineGeneDatFilt,by(nineGeneDatFilt, gene, function(x) lm(formula = gExp ~ age, data = x)))
oFitAgeQuadFilt <- with(nineGeneDatFilt,by(nineGeneDatFilt, gene, function(x) lm(formula = gExp ~ age + I(age^2), data = x)))
coefsAgeFilt <- lapply(oFitAgeFilt, function(x) summary(x)$coef)
coefsQuadFilt <- lapply(oFitAgeQuadFilt, function(x) summary(x)$coef)
lapply(nums, function(x) anova(oFitAgeFilt[[x]],oFitAgeQuadFilt[[x]]))
makeStripplot(nineGeneDat,NULL,c('p','r'))
