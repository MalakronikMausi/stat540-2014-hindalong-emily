nutrient.data[["quinoa"]]
library(lattice)
library(ggplot2)
library(knitr)
plot(rnorm(1,2))
plot(rnorm(100,1,2))
library(rpubs)
install.packages('knitr')
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
library(hexplom)
library(hexbin)
library(brewer)
set.seed(987)
theGene <- sample(1:nrow(prDat),1)
pDat <- data.frame(prDes, gExp=unlist(prDat[theGene,]))
library(lattice)
prDes <- read.table("GSE4051_design.tsv", header = TRUE, as.is = 1)
prDat <- read.table("GSE4051_data.tsv")
set.seed(987)
theGene <- sample(1:nrow(prDat),1)
pDat <- data.frame(prDes, gExp=unlist(prDat[theGene,]))
library(lattice)
prDes <- read.table("GSE4051_design.tsv", header = TRUE, as.is = 1)
prDat <- read.table("GSE4051_data.tsv")
getwd()
setwd("/Users/tunk/stat540-2014-hindalong-emily/")
# Read in data and design file
library(lattice)
prDes <- read.table("GSE4051_design.tsv", header = TRUE, as.is = 1)
prDat <- read.table("GSE4051_data.tsv")
set.seed(987)
theGene <- sample(1:nrow(prDat),1)
pDat <- data.frame(prDes, gExp=unlist(prDat[theGene,]))
prDes
theGene
prDat[theGene,]
unlist(prDat[theGene,])
pDat
aggregate(gExp ~ gType, pDat, FUN = mean)
stripplot(gType ~ gExp, pDat)
t.test(gExp ~ gType, pDat)
ttRes <- t.test(gExp ~ gType, pDat)
ttRes
ttRes_same_var <- t.test(gExp ~ gType, pDat, var.equal = TRUE)
ttRes_same_var$statistic
ttRes_same_var$p.value
ttRes_diff_var <- t.test(gExp ~ gType, pDat)
ttRes_diff_var$statistic
ttRes_diff_var$p.value
ksRes <- ks.test(gExp ~ gType, pDat)
ksRes <- ks.test(gExp, gType, pDat)
ksRes <- ks.test(pDat$gExp, pDat$gType)
pDat
subset(pDat,subset=gType=="wt",select = c("gExpr"))
subset(pDat,subset=gType=="wt",select = c("gExp"))
ksRes <- ks.test(subset(pDat,subset=gType=="wt",select = c("gExp")),
subset(pDat,subset=gType!="NrlKO",select = c("gExp")))
ksRes <- ks.test(subset(pDat,subset=gType=="wt",select = c("gExp")), subset(pDat,subset=gType!="NrlKO",select = c("gExp")))
thing <- subset(pDat,subset=gType=="wt",select = c("gExp"))
class(thing)
ksRes <- ks.test(thing, thing)
thing
as.vector(thing)
ksRes <- ks.test(as.vector(thing), as.vector(thing))
ksRes <- ks.test(as.numeric(thing), as.numeric(thing))
ksRes <- ks.test(unlist(thing), unlist(thing))
ksRes <- ks.test(unlist(subset(pDat,subset=gType=="wt",select = c("gExp"))),
unlist(subset(pDat,subset=gType=="NrlKO",select = c("gExp"))))
unlist(subset(pDat,subset=gType=="wt",select = c("gExp")))
unlist(subset(pDat,subset=gType=="NrlKO",select = c("gExp")))
ksRes
str(ksRes)
ksRes$statistic
ksRes$p.value
wilcoxRes <- wilcox.test(gExp ~ gType, pDat, var.equal = TRUE)
wilcoxRes$statistic
wilcoxRes$p.value
# Wilcox
wilcoxRes <- wilcox.test(gExp ~ gType, pDat)
wilcoxRes$statistic
wilcoxRes$p.value
hexplom(gExp ~gType,prDat)
prDat
colnames(prDat)
pDat
hexplom(gExp ~gType,pDat)
hexplom(gExp ,pDat)
jPuBuGnFun <- colorRampPalette(brewer.pal(n=7,"PuBuGn"))
heatmap(as.matrix(hDat20),col=jPuBuGnFun(256))
samp2 <- sample(1:nrow(prDat), size = 2, replace = FALSE)
hDat2 <- prDat[samp2,]
samp20 <- sample(1:nrow(prDat), size = 20, replace = FALSE)
hDat20 <- prDat[samp20,]
samp200 <- sample(1:nrow(prDat), size = 200, replace = FALSE)
hDat200 <- prDat[samp200,]
# Merge with design table for easier analysis
hDatDes2 <- merge(t(hDat2),prDes,by.x="row.names",by.y="sidChar")
hDatDes20 <- merge(t(hDat20),prDes,by.x="row.names",by.y="sidChar")
hDatDes200 <- merge(t(hDat200),prDes,by.x="row.names",by.y="sidChar")
oDat2 <-
with(hDatDes2,
data.frame(Row.names, sidNum, devStage, gType,
probeset = factor(rep(grep(".*at",colnames(hDatDes2),value=TRUE), each = nrow(hDatDes2))),
geneExp = c(unlist(hDatDes2[,grepl(".*at",colnames(hDatDes2))]))))
stripplot(geneExp ~ devStage | probeset, oDat2,
layout = c(nlevels(oDat2$probeset), 1),
groups = gType, auto.key = TRUE, jitter.data = TRUE)
stripplot(geneExp ~ devStage | gType, oDat2,
layout = c(nlevels(oDat2$gType), 1),
groups = probeset, auto.key = TRUE, jitter.data = TRUE)
library(RColorBrewer)
jPuBuGnFun <- colorRampPalette(brewer.pal(n=7,"PuBuGn"))
heatmap(as.matrix(hDat20),col=jPuBuGnFun(256))
pairs(hDat20[,sample(1:ncol(hDat20),size=6)])
hexplom(hDat20[,sample(1:ncol(hDat20),size=6)])
hexbinplot(gExpr ~ gType,pDat)
pDat
hexbinplot(gExp ~ gType,pDat)
hexbinplot(gExp ~ gExp,pDat)
library(plyr)
aggregate(eggBomb ~ gType * devStage, kDat, FUN = range)
aggregate(eggBomb ~ gType * devStage, pDat, FUN = range)
kDat <- read.table("GSE4051_MINI.txt",header=TRUE,row.names=1)
aggregate(eggBomb ~ gType * devStage, kDat, FUN = range)
ttRes1 <- d_ply(miniDat, ~ gene, function(x) t.test(gExp ~ gType, x), .print = TRUE)
ttRes2 <- dlply(miniDat, ~ gene, function(x) t.test(gExp ~ gType, x), .print = TRUE)
keepGenes <- c("1431708_a_at", "1424336_at", "1454696_at",
"1416119_at", "1432141_x_at", "1429226_at" )
miniDat <- subset(prDat, rownames(prDat) %in% keepGenes)
miniDat <- data.frame(gExp = as.vector(t(as.matrix(miniDat))),
gene = factor(rep(rownames(miniDat), each = ncol(miniDat)),
levels = keepGenes))
miniDat <- suppressWarnings(data.frame(prDes, miniDat))
ttRes1 <- d_ply(kDat, ~ gene, function(x) t.test(gExp ~ gType, x), .print = TRUE)
ttRes2 <- dlply(miniDat, ~ gene, function(x) t.test(gExp ~ gType, x), .print = TRUE)
ttRes1 <- d_ply(kDat, ~ gene, function(x) t.test(gExp ~ gType, x), .print = TRUE)
ttRes1 <- d_ply(miniDat, ~ gene, function(x) t.test(gExp ~ gType, x), .print = TRUE)
ttRes2 <- dlply(miniDat, ~ gene, function(x) t.test(gExp ~ gType, x), .print = TRUE)
ttRes2 <- dlply(miniDat, ~ gene, function(x) t.test(gExp ~ gType, x))
ttRes2
zz <- t.test(gExp ~ gType, z)
ttRes <- ddply(miniDat, ~ gene, function(z) {
zz <- t.test(gExp ~ gType, z)
zzz <- wilcox.test(gExp ~ gType, z)
zzzz <- ks.test(unlist(subset(z,subset=gType=="wt",select = c("gExp"))),unlist(subset(pDat,subset=gType=="NrlKO",select = c("gExp"))))
round(c(pValzz = zz$p.value, pValzzz = zzz$p.value, pValzzzz = zzzz$p.value), 4)
})
ttRes
keepGenes <- samp(1:nrow(prDat),100)
subDat <- prDat[keepGenes,]
keepGenes <- sample(1:nrow(prDat),100)
subDat <- prDat[keepGenes,]
subDat <- data.frame(gExp = as.vector(t(as.matrix(miniDat))),
gene = factor(rep(rownames(miniDat), each = ncol(miniDat)),
levels = keepGenes))
ttRes <- ddply(subDat, ~ gene, function(z) {
zz <- t.test(gExp ~ gType, z)
zzz <- wilcox.test(gExp ~ gType, z)
zzzz <- ks.test(unlist(subset(z,subset=gType=="wt",select = c("gExp"))),unlist(subset(pDat,subset=gType=="NrlKO",select = c("gExp"))))
round(c(pValzz = zz$p.value, pValzzz = zzz$p.value, pValzzzz = zzzz$p.value), 4)
})
ttRes
keepGenes <- sample(1:nrow(pDat),100)
subDat <- pDat[keepGenes,]
subDat <- data.frame(gExp = as.vector(t(as.matrix(pDat))),
gene = factor(rep(rownames(pDat), each = ncol(pDat)),
levels = keepGenes))
ttRes <- ddply(subDat, ~ gene, function(z) {
zz <- t.test(gExp ~ gType, z)
zzz <- wilcox.test(gExp ~ gType, z)
zzzz <- ks.test(unlist(subset(z,subset=gType=="wt",select = c("gExp"))),unlist(subset(pDat,subset=gType=="NrlKO",select = c("gExp"))))
round(c(pValzz = zz$p.value, pValzzz = zzz$p.value, pValzzzz = zzzz$p.value), 4)
})
ttRes
keepGenes <- sample(1:nrow(pDat),100)
subDat <- pDat[keepGenes,]
subDat <- data.frame(gExp = as.vector(t(as.matrix(pDat))),
gene = factor(rep(rownames(pDat), each = ncol(pDat)),
levels = keepGenes))
keepGenes <- sample(1:nrow(pDat),100)
subDat <- prDat[keepGenes,]
subDat <- merge(t(subDat),prDes,by.x="row.names",by.y="sidChar")
keepGenes <- sample(1:nrow(prDat),100)
subDat <- prDat[keepGenes,]
subDat <- merge(t(subDat),prDes,by.x="row.names",by.y="sidChar")
subDat
prDes
head(prDat)
subDat <- merge(t(subDat),t(prDes),by.x="row.names",by.y="sidChar")
subDat <- merge(t(subDat),prDes,by.x="row.names",by.y="sidChar")
subDat
keepGenes <- sample(1:nrow(prDat),100)
subDat <- prDat[keepGenes,]
subDat <- merge(t(subDat),prDes,by.x="row.names",by.y="sidChar")
subDat
subDat <- data.frame(gExp = as.vector(t(as.matrix(pDat))),
gene = factor(rep(rownames(pDat), each = ncol(pDat)),
levels = keepGenes))
subDat
subDat <- data.frame(gExp = as.vector(t(as.matrix(subDat))),
gene = factor(rep(rownames(subDat), each = ncol(subDat)),
levels = keepGenes))
subDat <- prDat[keepGenes,]
subDat <- merge(t(subDat),prDes,by.x="row.names",by.y="sidChar")
subDat <- data.frame(gExp = as.vector(t(as.matrix(subDat))),
gene = factor(rep(rownames(subDat), each = ncol(subDat)),
levels = keepGenes))
subDat
keepGenes <- sample(1:nrow(prDat),100)
subDat <- prDat[keepGenes,]
ubDat <- data.frame(gExp = as.vector(t(as.matrix(subDat))),
gene = factor(rep(rownames(subDat), each = ncol(subDat)),
levels = keepGenes))
subDat <- data.frame(gExp = as.vector(t(as.matrix(subDat))),
gene = factor(rep(rownames(subDat), each = ncol(subDat)),
levels = keepGenes))
subDat
keepGenes <- c("1431708_a_at", "1424336_at", "1454696_at",
"1416119_at", "1432141_x_at", "1429226_at" )
miniDat <- subset(prDat, rownames(prDat) %in% keepGenes)
miniDat <- data.frame(gExp = as.vector(t(as.matrix(miniDat))),
gene = factor(rep(rownames(miniDat), each = ncol(miniDat)),
levels = keepGenes))
miniDat
"1416119_at", "1432141_x_at", "1429226_at" )
miniDat <- subset(prDat, rownames(prDat) %in% keepGenes)
miniDat
subDat <- prDat[keepGenes,]
subDat
keepGenes <- sample(1:nrow(prDat),100)
subDat <- prDat[keepGenes,]
subDat
subDat <- data.frame(gExp = as.vector(t(as.matrix(subDat))),
gene = factor(rep(rownames(subDat), each = ncol(subDat)),
levels = keepGenes))
head(subDat)
miniDat <- data.frame(gExp = as.vector(t(as.matrix(miniDat))),
gene = factor(rep(rownames(miniDat), each = ncol(miniDat)),
levels = keepGenes))
miniDat
keepGenes <- c("1431708_a_at", "1424336_at", "1454696_at",
"1416119_at", "1432141_x_at", "1429226_at" )
miniDat <- subset(prDat, rownames(prDat) %in% keepGenes)
miniDat <- data.frame(gExp = as.vector(t(as.matrix(miniDat))),
gene = factor(rep(rownames(miniDat), each = ncol(miniDat)),
levels = keepGenes))
miniDat
keepGenes <- sample(1:nrow(prDat),100)
subDat <- prDat[keepGenes,]
subDat <- data.frame(gExp = as.vector(t(as.matrix(subDat))),
gene = factor(rep(rownames(subDat), each = ncol(subDat)),
levels = keepGenes))
head(subDat)
keepGenes <- c("1431708_a_at", "1424336_at", "1454696_at",
"1416119_at", "1432141_x_at", "1429226_at" )
miniDat <- subset(prDat, rownames(prDat) %in% keepGenes)
miniDat <- data.frame(gExp = as.vector(t(as.matrix(miniDat))),
gene = factor(rep(rownames(miniDat), each = ncol(miniDat)),
levels = keepGenes))
miniDat
gene = factor(rep(rownames(miniDat), each = ncol(miniDat))
gene = factor(rep(rownames(miniDat), each = ncol(miniDat))
gene = factor(rep(rownames(miniDat), each = ncol(miniDat))
:
_ddd
gene = factor(rep(rownames(miniDat), each = ncol(miniDat)),
levels = keepGenes)
gene
keepGenes <- c("1431708_a_at", "1424336_at", "1454696_at",
"1416119_at", "1432141_x_at", "1429226_at" )
miniDat <- subset(prDat, rownames(prDat) %in% keepGenes)
gene = factor(rep(rownames(miniDat), each = ncol(miniDat)),
levels = keepGenes)
gene
keepGenes <- sample(1:nrow(prDat),100)
subDat <- prDat[keepGenes,]
gene = factor(rep(rownames(subDat), each = ncol(subDat)),
levels = keepGenes)
gene
head(minDat)
head(minData)
head(miniDat)
head(subDat)
samp100 <- sample(1:nrow(prDat),100)
subNames <- rownames(prDat)[samp100]
subDat <- prDat[samp100,]
subDat <- data.frame(gExp = as.vector(t(as.matrix(subDat))),
gene = factor(rep(rownames(subDat), each = ncol(subDat)),
levels = subNames))
head(subDat)
head(miniDat)
miniDat <- data.frame(gExp = as.vector(t(as.matrix(miniDat))),
gene = factor(rep(rownames(miniDat), each = ncol(miniDat)),
levels = keepGenes))
miniDat
keepGenes <- c("1431708_a_at", "1424336_at", "1454696_at",
"1416119_at", "1432141_x_at", "1429226_at" )
miniDat <- subset(prDat, rownames(prDat) %in% keepGenes)
miniDat <- data.frame(gExp = as.vector(t(as.matrix(miniDat))),
gene = factor(rep(rownames(miniDat), each = ncol(miniDat)),
levels = keepGenes))
miniDat
subDat <- suppressWarnings(data.frame(prDes, subDat))
ttRes <- ddply(subDat, ~ gene, function(z) {
zz <- t.test(gExp ~ gType, z)
zzz <- wilcox.test(gExp ~ gType, z)
zzzz <- ks.test(unlist(subset(z,subset=gType=="wt",select = c("gExp"))),unlist(subset(pDat,subset=gType=="NrlKO",select = c("gExp"))))
round(c(pValzz = zz$p.value, pValzzz = zzz$p.value, pValzzzz = zzzz$p.value), 4)
})
ttRes
unlist(subset(z,subset=gType=="wt",select = c("gExp")))
unlist(subset(subDat,subset=gType=="wt",select = c("gExp")))
subDat
head(subDat)
ttRes <- ddply(subDat, ~ gene, function(z) {
zz <- t.test(gExp ~ gType, z)
zzz <- wilcox.test(gExp ~ gType, z)
zzzz <- ks.test(unlist(subset(z,subset=gType=="wt",select = c("gExp"))),unlist(subset(z,subset=gType=="NrlKO",select = c("gExp"))))
round(c(pValzz = zz$p.value, pValzzz = zzz$p.value, pValzzzz = zzzz$p.value), 4)
})
ttRes
xyplot(pValzz + pValzzz + pValzzzz ~ gene,ttRes)
xyplot(pValzz + pValzzz ~ pValzzzz gene,ttRes)
xyplot(pValzz + pValzzz ~ pValzzzz,ttRes)
xyplot(pValzz + pValzzz ~ pValzzzz,ttRes,outer=TRUE)
xyplot(pValzzz + pValzzzz ~ pValzz,ttRes,outer=TRUE)
xyplot(pValzzzz ~ pValzzz,ttRes)
yplot(pValzzz + pValzzzz ~ pValzz,ttRes,outer=TRUE)
xyplot(pValzzz + pValzzzz ~ pValzz,ttRes,outer=TRUE)
ttRes <- ddply(subDat, ~ gene, function(z) {
zz <- t.test(gExp ~ gType, z)
zzz <- wilcox.test(gExp ~ gType, z)
zzzz <- ks.test(unlist(subset(z,subset=gType=="wt",select = c("gExp"))),unlist(subset(z,subset=gType=="NrlKO",select = c("gExp"))))
round(c(pVal_t = zz$p.value, pVal_wilcox = zzz$p.value, pVal_ks = zzzz$p.value), 4)
})
ttRes
xyplot(pVal_wilcox + pVal_ks ~ pVal_t,ttRes,outer=TRUE)
xyplot(pVal_ks ~ pVal_wilcox,ttRes)
xyplot(pVal_wilcox + pVal_ks ~ pVal_t,ttRes,outer=TRUE)
xyplot(log(pVal_ks) ~ log(pVal_wilcox),ttRes)
xyplot(pVal_wilcox + pVal_ks ~ pVal_t,ttRes,outer=TRUE,scales = list(x = list(log = 10)))
xyplot(pVal_ks ~ pVal_wilcox,ttRes,scales = list(x = list(log = 10)))
xyplot(pVal_wilcox + pVal_ks ~ pVal_t,ttRes,outer=TRUE,scales = list(x = list(log = 10)))
xyplot(pVal_wilcox + pVal_ks ~ pVal_t,ttRes,outer=TRUE,scales = list(x = list(log = 10), y = list(log = 10)))
xyplot(pVal_ks ~ pVal_wilcox,ttRes,scales = list(x = list(log = 10), y = list(log = 10)))
ttRes <- ddply(subDat, ~ gene, function(z) {
zz <- t.test(gExp ~ gType, z)
zzz <- wilcox.test(gExp ~ gType, z)
zzzz <- ks.test(unlist(subset(z,subset=gType=="wt",select = c("gExp"))),unlist(subset(z,subset=gType=="NrlKO",select = c("gExp"))))
round(c(pVal_t = zz$p.value, pVal_wilcox = zzz$p.value, pVal_ks = zzzz$p.value), 4)
})
warnings()
ttRes[< 0.5] <- TRUE
ttRes[<0.5,] <- TRUE
head(ttRes)
# Binary matrix
ttRes[ttRes$pVal_t < 0.5, "pVal_t"] <- TRUE
ttRes
ttRes <- ddply(subDat, ~ gene, function(z) {
zz <- t.test(gExp ~ gType, z)
zzz <- wilcox.test(gExp ~ gType, z)
zzzz <- ks.test(unlist(subset(z,subset=gType=="wt",select = c("gExp"))),unlist(subset(z,subset=gType=="NrlKO",select = c("gExp"))))
round(c(pVal_t = zz$p.value, pVal_wilcox = zzz$p.value, pVal_ks = zzzz$p.value), 4)
})
ttRes
d_ply(ttResBin,function(x) {if x < 0.5 x <- TRUE})
d_ply(ttResBin,function(x) {if(x < 0.5) {x <- TRUE}})
ttResBin <- ttRes
ttResBin[ttResBin$pVal_t < 0.5, "pVal_t"] <- TRUE
ttResBin
lapply(ttResBin, function(x) {lapply(x,function(y) { if (y < 0.5){y <- TRUE} } ) })
ttResBin <- ttRes
ttResBin[ttResBin < 0.5] <- TRUE
ttResBin[ttResBin >= 0.5] <- FALSE
ttResBin
ttResBin <- ttRes
ttResBin
ttResBin[ttResBin < 0.5] <- TRUE
ttResBin
ttResBin <- ttRes
ttResBin[ttRes < 0.5] <- TRUE
ttResBin[ttRes >= 0.5] <- FALSE
ttResBin
colSums(ttRes)
colSums(ttRes[,c("pVal_t","pVal_wilcox","pVal_ks")])
colSums(ttResBin[,c("pVal_t","pVal_wilcox","pVal_ks")])
rowSums(ttResBin)
rowSums(ttResBin[,c("pVal_t","pVal_wilcox","pVal_ks")])
table(geneCounts)
testCounts <- colSums(ttResBin[,c("pVal_t","pVal_wilcox","pVal_ks")])
# On how many tests does each gene pass the threshold?
geneCounts <- rowSums(ttResBin[,c("pVal_t","pVal_wilcox","pVal_ks")])
table(geneCounts)
ttRes <- ddply(subDat, ~ gene, function(z) {
zz <- t.test(gExp ~ gType, z)
zzz <- suppressWarnings(wilcox.test(gExp ~ gType, z))
zzzz <- suppressWarnings(ks.test(unlist(subset(z,subset=gType=="wt",select = c("gExp"))),unlist(subset(z,subset=gType=="NrlKO",select = c("gExp"))))
round(c(pVal_t = zz$p.value, pVal_wilcox = zzz$p.value, pVal_ks = zzzz$p.value), 4)
})
ttRes <- ddply(subDat, ~ gene, function(z) {
zz <- t.test(gExp ~ gType, z)
zzz <- suppressWarnings(wilcox.test(gExp ~ gType, z))
zzzz <- suppressWarnings(ks.test(unlist(subset(z,subset=gType=="wt",select = c("gExp"))),unlist(subset(z,subset=gType=="NrlKO",select = c("gExp")))
round(c(pVal_t = zz$p.value, pVal_wilcox = zzz$p.value, pVal_ks = zzzz$p.value), 4)
})
ttRes <- ddply(subDat, ~ gene, function(z) {
zz <- t.test(gExp ~ gType, z)
zzz <- suppressWarnings(wilcox.test(gExp ~ gType, z))
zzzz <- suppressWarning(ks.test(unlist(subset(z,subset=gType=="wt",select = c("gExp"))),unlist(subset(z,subset=gType=="NrlKO",select = c("gExp"))))
round(c(pVal_t = zz$p.value, pVal_wilcox = zzz$p.value, pVal_ks = zzzz$p.value), 4)
})
ttRes <- ddply(subDat, ~ gene, function(z) {
zz <- t.test(gExp ~ gType, z)
zzz <- suppressWarnings(wilcox.test(gExp ~ gType, z))
zzzz <- suppressWarnings(ks.test(unlist(subset(z,subset=gType=="wt",select = c("gExp"))),unlist(subset(z,subset=gType=="NrlKO",select = c("gExp"))))
round(c(pVal_t = zz$p.value, pVal_wilcox = zzz$p.value, pVal_ks = zzzz$p.value), 4)
})
ttRes <- ddply(subDat, ~ gene, function(z) {
zz <- t.test(gExp ~ gType, z)
zzz <- suppressWarnings(wilcox.test(gExp ~ gType, z))
zzzz <- suppressWarnings(ks.test(unlist(subset(z,subset=gType=="wt",select = c("gExp"))),unlist(subset(z,subset=gType=="NrlKO",select = c("gExp")))))
round(c(pVal_t = zz$p.value, pVal_wilcox = zzz$p.value, pVal_ks = zzzz$p.value), 4)
})
zzzz <- suppressWarnings(ks.test(unlist(subset(z,subset=gType=="wt",select = c("gExp"))),unlist(subset(z,subset=gType=="NrlKO",select = c("gExp")))))
ttRes <- ddply(subDat, ~ gene, function(z) {
zz <- t.test(gExp ~ gType, z)
zzz <- suppressWarnings(wilcox.test(gExp ~ gType, z))
zzzz <- suppressWarnings(ks.test(unlist(subset(z,subset=gType=="wt",select = c("gExp"))),unlist(subset(z,subset=gType=="NrlKO",select = c("gExp")))))
round(c(pVal_t = zz$p.value, pVal_wilcox = zzz$p.value, pVal_ks = zzzz$p.value), 4)
})
